d$`emissions.@CO2_abs`[0]
d$`emissions.@CO2_abs`[1]
d$`emissions.@CO2_abs`[2]
d$`emissions.@CO2_abs`[3]
d$'@duration'
d$'@duration'[0]
d$'@duration'[1]
as.numeric(d$'@duration'[1])
sum(as.numeric(d$'@duration'[1:]))
sum(as.numeric(d$'@duration'))
mean(as.numeric(d$'@duration'))
source("read_sumo_data.r")
DATA = "../output/cruce.output.json"
trip_info <- read_sumo_data(DATA)
install.packages("rjson")
source("read_sumo_data.r")
DATA = "../output/cruce.output.json"
trip_info <- read_sumo_data(DATA)
install.packages("reticulate")
library(reticulate)
use_python("/usr/local/bin/python3")
os <- import('os')
use_python("/usr/local/bin/python3")
source("read_sumo_data.r")
os <- import('os')
use_python("/usr/local/bin/python")
os <- import('os')
os$listdir
library(reticulate)
install.packages("reticulate")
install.packages("reticulate")
library(reticulate)
use_python("/usr/local/bin/python3")
os <- import('os')
myenv
use_condaenv("base")
os <- import('os')
reticulate::py_config()
install.packages("reticulate")
library(reticulate)
reticulate::py_config()
config$numpy
config
config <- py_config()
config <- py_config(TRUE)
library(reticulate)
os <- import('os')
numpy
py_install(pandas)
use_python("/usr/local/bin/python")
py_install(pandas)
install.packages("reticulate")
library(reticulate)
py_install(pandas)
use_python("/usr/local/bin/python")
py_install(pandas)
use_condaenv('r-reticulate')
py_install(pandas)
use_python("/usr/local/bin/python3")
py_install(pandas)
os <- import('os')
a = 1
os <- import(os)
os <- import('os')
os <- import('os')
os$listdir()
from xmltojson  import read_xml
install.packages("reticulate")
install.packages("reticulate")
library(reticulate)
from xmltojson  import read_xml
from xmltojson import read_xml
from xmltojson import read_xml
xmltojson <- import("xmltojson")
xmltojson
xmltojson.
xmltojson.read_xml
data  <- xmltojson$read_xml("../output/cruce.output.xml")
View(data)
xmltojson <- import("../../python/xmltojson")
trip_info <- fromJSON( data)
library(jsonlite)
View(trip_info)
View(trip_info)
output <- flatten(trip_info$tripinfos$tripinfo)
trip_info$@duration
trip_info$duration
hist(trip_info$duration)
hist(asnumeric(trip_info$duration))
hist(asNumeric(trip_info$duration))
hist(as.numeric(trip_info$duration))
as.numeric(trip_info$@duration)
as.numeric(trip_info$duration)
View(trip_info)
as.numeric(trip_inf@oduration)
as.numeric(trip_info@duration)
data$tripinfos$tripinfo
trip_info$@duration
trip_info$'@duration'
trip_info <- read_xml_data(INPUT_PATH)
trip_info <- read_xml_data(INPUT_PATH)
read_xml_data <- function(path){
install.packages("rjson")
install.packages("reticulate")
library(jsonlite)
library(reticulate)
xmltojson <- import("xmltojson")
data  <- xmltojson$read_xml(path)
trip_info <- fromJSON( data)
return(trip_info)
}
source("read_xml_data.r")
INPUT_PATH = "../output/cruce.output.xml"
trip_info <- read_xml_data(INPUT_PATH)
source("../read_xml_data.r")
INPUT_PATH = "../output/cruce.output.xml"
trip_info <- read_xml_data(INPUT_PATH)
packages <- c("rjson", "reticulate")
install.packages(setdiff(packages, rownames(installed.packages())))
source("../../python/pythonUtilities.r")
source("../../python/pythonUtilities.r")
source("../../python/pythonUtilities.r")
sumo_simulate("conf/cruce.sumo.cfg")
simulation <- import("simulation")
traci_simulation <- import("traci_simulation")
traci_simulation <- import("traci_simulation")
traci_simulation <- import("traci_simulation")
traci_simulation <- import("traci_simulation")
xmltojson <- import("xmltojson")
check_packages <- function(){
packages <- c("rjson", "reticulate")
install.packages(setdiff(packages, rownames(installed.packages())))
}
traci_simulation <- import("traci_simulation")
xmltojson <- import("xmltojson")
d <- import("traci_simulation")
traci_simulation$
simulation()
d <- import("traci_simulation")
d <- import("traci_simulation")
d <- import("traci_simulation")
traci_simulation
d <- import("traci_simulation")
import("traci_simulation.py")
import("traci_simulation")
d <- import("traci_simulate")
d <- import("sumoSimulate")
d <- import("sumoSimulate")
d <- import("sumoSimulation")
check_packages()
check_packages <- function(){
packages <- c("rjson", "reticulate")
install.packages(setdiff(packages, rownames(installed.packages())))
}
check_packages()
d <- import("sumoSimulation")
library(packages)
check_packages <- function(){
packages <- c("rjson", "reticulate")
install.packages(setdiff(packages, rownames(installed.packages())))
library(packages)
}
check_packages()
check_packages <- function(){
packages <- c("rjson", "reticulate")
install.packages(setdiff(packages, rownames(installed.packages())))
library("rjson")
library("reticulate")
}
check_packages()
d <- import("sumoSimulation")
xmltojson <- import("xmltojson")
xmltojson <- import("xmltojson")
source("../../python/pythonUtilities.r")
sumo <- import("sumoSimulation")
system
system.getCurrentDirectory()
system.getCurrentDirectory()
rstudioapi::getActiveDocumentContext()$path
getwd()
getwd() + "/hola/"
paste("hola","hoal")
source("../../python/pythonUtilities.r")
OUTPUT_PATH = "../output/cruce.output.xml"
CONF_BASE_PATH = paste(getwd(),"/conf/cruce.sumo.cfg")
sumo_simulate(CONF_BASE_PATH, 10000)
source("../../python/pythonUtilities.r")
sumo_simulate(CONF_BASE_PATH, 10000)
sumo_simulate(CONF_BASE_PATH, 10000)
data <- read_xml_data(OUTPUT_PATH)
library(XML)
doc = xmlTreeParse("output/cruce.1.output.xml", useInternal=TRUE)
getwd()
doc = xmlTreeParse("../output/cruce.1.output.xml", useInternal=TRUE)
library(XML)
doc = xmlTreeParse("../output/cruce.1.output.xml", useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
mean(duration)
paste("hola","adios","hello")
mean_durations <- c()
mean_durations <- c()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml")
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
mean_durations$append(mean(duration))
}
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
mean_durations$append(mean(duration))
}
mean_durations <- c()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
mean_durations$append(mean(duration))
}
mean_durations.append(2)
mean_durations <- c()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
append(mean_durations, mean(duration))
}
hist(mean_durations)
append(mean_durations,c(1))
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
print(mean(duration))
}
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
print(mean(duration))
}
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
print(mean(duration))
}
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
print(mean(duration))
}
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
print(mean(duration))
}
library(XML)
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
print(mean(duration))
}
a <- list()
a.append(3)
append(a,2)
a
append(a,45,54,45)
append(a,values=45)
append(a,values=44)
a <- append(a,values=44)
a <- append(a,values=44)
a <- append(a,values=44)
a <- append(a,values=44)
a
mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
print(mean(duration))
mean_durations <- append(mean_durations, values = duration)
}
hist(mean_durations)
hist(as.numeric(mean_durations))
View(mean_durations)
mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
mean_durations <- append(mean_durations, values = mean(duration))
}
as.numeric
hist(as.numeric(mean_durations))
View(mean_durations)
hist(as.numeric(mean_durations), xlab = "media duración del trayecto (segundos)")
as.numeric
ls
ls()
source("../simulation.sh")
mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
mean_durations <- append(mean_durations, values = mean(duration))
}
hist(as.numeric(mean_durations), xlab = "Media duración del trayecto (segundos)")
new_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.2.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
new_mean_durations <- append(mean_durations, values = mean(duration))
}
new_hist <- hist(as.numeric(new_mean_durations), xlab = "Media duración del trayecto (segundos)")
plot(base_hist)
base_hist <- hist(as.numeric(base_mean_durations), xlab = "Media duración del trayecto (segundos)")
install.packages(XML)
library(XML)
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(mean_durations, values = mean(duration))
}
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(base_mean_durations, values = mean(duration))
}
new_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.2.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
new_mean_durations <- append(new_mean_durations, values = mean(duration))
}
base_hist <- hist(as.numeric(base_mean_durations), xlab = "Media duración del trayecto (segundos)")
new_hist <- hist(as.numeric(new_mean_durations), xlab = "Media duración del trayecto (segundos)")
plot(base_hist)
plot(new_hist,add = TRUE)
plot(base_hist)
plot(new_hist,add = T)
plot(base_hist, col = rgb(1,0,0,0.5))
plot(new_hist,col = rgb(0,1,0,0.5), add = T)
plot(new_hist,col = rgb(0,1,0,0.5), add = T)
plot(base_hist, col = rgb(1,0,0,0.5), xlim=c(0,500))
plot(base_hist, col = rgb(1,0,0,0.5), xlim=c(200,500))
plot(base_hist, col = rgb(1,0,0,0.5), xlim=c(250,400))
plot(new_hist,col = rgb(0,1,0,0.5), xlim=c(250,400), add = T)
plot(new_hist,col = rgb(0,1,0,0.5), xlim=c(250,400), add = T)
plot(base_hist, col = rgb(1,0,0,0.5), xlim=c(250,400))
base_hist <- hist(as.numeric(base_mean_durations), breaks = 10, xlab = "Media duración del trayecto (segundos)")
new_hist <- hist(as.numeric(new_mean_durations), breaks = 10, xlab = "Media duración del trayecto (segundos)")
plot(new_hist,col = rgb(0,1,0,0.5), xlim=c(250,400), add = T)
plot(base_hist, col = rgb(1,0,0,0.5), xlim=c(250,400))
plot(base_hist, col = rgb(1,0,0,0.5), xlim=c(250,400))
plot(new_hist,col = rgb(0,1,0,0.5), xlim=c(250,400), add = T)
plot(new_hist,col = rgb(0,1,0,0.5), xlim=c(250,400), add = T)
new_hist <- hist(as.numeric(new_mean_durations), breaks = 10, xlab = "Media duración del trayecto (segundos)")
base_hist <- hist(as.numeric(base_mean_durations), breaks = 10)
plot(base_hist, col = rgb(1,0,0,0.5), xlim=c(250,400))
new_hist <- hist(as.numeric(new_mean_durations), breaks = 10)
plot(new_hist,col = rgb(0,1,0,0.5), xlim=c(250,400), add = T)
plot(base_hist, col = rgb(1,0,0,0.5), xlim=c(250,400))
plot(new_hist,col = rgb(0,1,0,0.5), xlim=c(250,400), add = T)
new_hist <- hist(as.numeric(new_mean_durations), breaks = 10)
plot(base_hist, col = rgb(1,0,0,0.5), xlim=c(250,400))
new_hist <- hist(as.numeric(new_mean_durations), breaks = 10)
plot(base_hist, col = rgb(1,0,0,0.5))
plot(new_hist,col = rgb(0,1,0,0.5), add = T)
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(base_mean_durations, values = mean(duration))
}
new_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.2.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
new_mean_durations <- append(new_mean_durations, values = mean(duration))
}
base_hist <- hist(as.numeric(base_mean_durations), breaks = 10)
new_hist <- hist(as.numeric(new_mean_durations), breaks = 10)
plot(base_hist, col = rgb(1,0,0,0.5))
plot(new_hist,col = rgb(0,1,0,0.5), add = T)
install.packages(XML)
library(XML)
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(base_mean_durations, values = mean(duration))
}
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(base_mean_durations, values = mean(duration))
}
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
print(xmlSApply(top,xmlGetAttr,"duration"))
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(base_mean_durations, values = mean(duration))
}
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
print(xmlSApply(top,xmlGetAttr,"duration"))
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(base_mean_durations, values = mean(duration))
}
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(base_mean_durations, values = mean(duration))
}
install.packages(XML)
library(XML)
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(base_mean_durations, values = mean(duration))
}
install.packages(XML)
library(XML)
base_mean_durations <- list()
install.packages(XML)
detach("package:XML", unload = TRUE)
library(XML)
xml
base_mean_durations <- list()
for (i in 1:30){
file_path = paste("../output/cruce.",i,".output.xml",sep="")
print(file_path)
doc = xmlTreeParse(file_path, useInternal=TRUE)
top = xmlRoot(doc)
duration = as.numeric(xmlSApply(top,xmlGetAttr,"duration"))
base_mean_durations <- append(base_mean_durations, values = mean(duration))
}
